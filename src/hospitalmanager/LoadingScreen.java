/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitalmanager;

/**
 *
 * @author guest123
 */
public class LoadingScreen extends javax.swing.JFrame {

    /**
     * Creates new form LoadingScreen
     */
    public LoadingScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        BackgroundImage = new javax.swing.JLabel();
        LoadingBar = new javax.swing.JProgressBar();
        LoadingLabel = new javax.swing.JLabel();
        LoadingValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(153, 204, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackgroundImage.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        BackgroundImage.setForeground(new java.awt.Color(51, 51, 51));
        BackgroundImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BackgroundImage.setText("EHealth");
        background.add(BackgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 160, 70));
        background.add(LoadingBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 440, 670, 20));

        LoadingLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LoadingLabel.setForeground(new java.awt.Color(51, 51, 51));
        LoadingLabel.setText("Loading...");
        background.add(LoadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, -1, -1));

        LoadingValue.setForeground(new java.awt.Color(51, 51, 51));
        LoadingValue.setText("0%");
        background.add(LoadingValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 410, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadingScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        LoadingScreen ls = new LoadingScreen();
        ls.setVisible(true);
        
        try 
        {
            for(int i = 0; i <= 100; i++)
            {
                Thread.sleep(100);
                ls.LoadingValue.setText(i + "%");
                
                if(i == 10)ls.LoadingLabel.setText("Loading in Features...");
                if(i == 20)ls.LoadingLabel.setText("Loading Modules");
                if(i == 50)ls.LoadingLabel.setText("Almost Done");
                ls.LoadingBar.setValue(i);
            }
        }
        catch(Exception e)
        {
            
        }


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundImage;
    private javax.swing.JProgressBar LoadingBar;
    private javax.swing.JLabel LoadingLabel;
    private javax.swing.JLabel LoadingValue;
    private javax.swing.JPanel background;
    // End of variables declaration//GEN-END:variables
}
